1.链表
【合并两有序链表】
/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
class Solution {
public:
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2)
    {
        ListNode* new_node = new ListNode(-1);
        ListNode* cur = new_node;
        if (pHead1==NULL){
            return pHead2;
        }
        if(pHead2==NULL){
            return pHead1;
        }
        while (pHead1&&pHead2){
            if (pHead1->val<pHead2->val){
                cur->next = pHead1;
                cur = cur ->next;//注意
                pHead1 = pHead1->next;//可以换成递归的形式pHead1 = Merge(pHead1->next,pHead2）
            }else{
                cur->next = pHead2;
                cur = cur->next;
                pHead2 = pHead2->next;
            }
            
        }
        if(pHead1){
            cur->next= pHead1;
        }
        if(pHead2){
            cur->next = pHead2;
        }
        return new_node->next;
    }
};
